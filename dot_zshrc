if [ "$ZELLIJ" = "" ]; then zellij; fi # Start shell with Zellij 

# source ~/.fresh/build/shell.sh # Fresh shell

# Sensible Zsh config
# https://www.viget.com/articles/zsh-config-productivity-plugins-for-mac-oss-default-shell/
setopt auto_cd # auto change directories
setopt hist_ignore_dups # do not enter command lines into the history list if they are duplicates of the previous event.
setopt append_history # zsh sessions will append their history list to the history file, rather than replace it. Thus, multiple parallel zsh sessions will all have the new entries from their history lists added to the history file
setopt extended_history # save each commandâ€™s beginning timestamp (in seconds since the epoch) and the duration (in seconds) to the history file
setopt hist_expire_dups_first # if the internal history needs to be trimmed to add the current command line, setting this option will cause the oldest history event that has a duplicate to be lost before losing a unique event from the list.
setopt inc_append_history # this option works like APPEND_HISTORY except that new history lines are added to the $HISTFILE incrementally (as soon as they are entered), rather than waiting until the shell exits
setopt share_history # This option both imports new commands from the history file, and also causes your typed commands to be appended to the history file
HISTSIZE=50000 # number of commands to save
SAVEHIST=10000 # The history is trimmed when its length excedes SAVEHIST by 20%
HISTFILE="$HOME/.zsh_history"

export EXA_COLORS="da=32" # da: timestamp

# Command Relearning
alias find='echo "use fd, https://github.com/sharkdp/fd. Remove when it makes sense, 14 Jan"'

# Work
alias work='cd ~/work'
alias facer='cd ~/work/marketfacer/'
alias placer='cd ~/work/marketplacer/'
alias dessys='cd ~/work/design system/'
alias ppc='sh ~/.facer-pre-push-tests.sh' # runs all marketfacer tests

# Shell 
alias rm='rm -i'
alias cv='cv -i'
alias ln='ln -i'
alias mkdir='mkdir -p'
alias l='exa -hal --group-directories-first --git --time-style=long-iso' # exa ( modern ls replacement https://github.com/ogham/exa )
alias ltree='exa_interactive_tree_script'
# scripts
exa_interactive_tree_script(){
  if [[ $1 -gt 0 ]]
  then 
      exa --tree --level=$1 -hal --git --time-style=long-iso
  else
      echo "Please provide a number for depth of tree lists";
  fi
}

# Helpers/shortcuts
alias lus='l /dev | grep usbserial' # list usb serial ports, for arduino flashing
alias v='/Users/danny/.local/bin/lvim'
alias lvim='/Users/danny/.local/bin/lvim'
alias g='gitui'

# Directories
alias school='cd ~/school'
alias dev='cd ~/Library/Mobile\ Documents/com~apple~CloudDocs/Documents/dev'
alias desktop="cd ~/Desktop"
alias fun='cd ~/fun'
alias menu='cd /Users/danny/Library/Mobile\ Documents/com~apple~CloudDocs/Documents/dev/projects/menu'
alias brain='cd /Users/danny/Library/Mobile\ Documents/iCloud~md~obsidian/Documents/Brain'

# Edit Dotfiles
alias dotfiles='cd ~/.dotfiles/'

# Git
alias g='gitui'
# commit
alias gc='git commit'
alias gcm='git commit -m'
alias gca='git commit --amend'
alias gcane='git commit --amend --no-edit'
# branch/remote
alias gpsh=' git push'
alias gpshfwl='git push --force-with-lease'
alias gpll='git pull -r'
alias dmb='git switch main && git branch --merged | grep -v \* | xargs git branch -d' # delete merged branches
alias gsw='git switch'
alias gswc='git switch -c'
# rebase
alias grb='git rebase'
alias grbih='git_rebase_interactive_head_script'
alias grbc='git rebase --continue'
alias grba='git rebase --abort'
# stash
alias gsh='git stash'
alias gshki='git stash --keep-index'
alias gshl='git stash -list'
# diff 
alias gd='git diff'
alias gds='git diff --staged'
alias gdhh='git diff HEAD^ HEAD' # git diff current changes and last commit
# inspection
alias gs='gitui_retraining_script'
alias ga='gitui_retraining_script'
alias gl='gitui_retraining_script'
alias glp='gitui_retraining_script'
# scripts
git_rebase_interactive_head_script(){
  if [ $1 -gt 0 ]
  then
      git rebase -i HEAD~$1
  else
      echo "Please provide a number to rebase by";
  fi
}
gitui_retraining_script(){
  echo "use gitui"
}

# C++
alias gpp='g++ -Wall -std=c++1z'

# JavaScript
# Typescript
alias ts='ts-node'
## Jest
alias jtd='jest -o'
alias jof='jest --onlyFailures'
# Yarn
alias yd="yarn dev"
alias yi="yarn install"

# Rails
alias rs='rails server'
alias rc='rails console'
alias rdb='rails db'

# Python
alias py='python'
alias jp='jupyter notebook'

# Rust
alias cc='cargo check'
alias cr='cargo run'
alias cb='cargo build'

# Docker
alias dcup="docker-compose up -d"
alias dcs="docker-compose stop"

#Shell Config / Random collection of config passed down from smarter people and the internet
export GPG_TTY=`tty`
# source /usr/local/opt/chruby/share/chruby/chruby.sh
# source /usr/local/opt/chruby/share/chruby/auto.sh

path=(
      /usr/local/{bin,sbin}
      ./node_modules/.bin
      $HOME/bin
      $HOME/go/bin
      $HOME/Applications/Visual Studio Code.app/Contents/Resources/app/bin
      $path
     )

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm


# eval "$(rbenv init -)"
# eval "$(pyenv init -)"
# eval "$(direnv hook zsh)"

eval "$(starship init zsh)"
export STARSHIP_CONFIG="$HOME/.config/starship.toml"

source /opt/homebrew/share/antigen/antigen.zsh

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-history-substring-search

antigen apply
# Auto suggest
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#777777"
bindkey '^ ' autosuggest-accept

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1
